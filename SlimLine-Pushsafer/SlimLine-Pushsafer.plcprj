<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plcProject caseSensitive="true" useCustomWorkspace="true" debugMode="false" extcheck="true" SFCControl="false" copyWarningThreshold="200" version="1.0" useLD2="true" useFBMethods="false">
	<image>SlimLine-Pushsafer.imgx</image>
	<commSettings>Modbus:1,1000,M#COM:1,115200,E,8,1,H</commSettings>
	<sources>
		<main sourceFile="SlimLine-Pushsafer.plc" sourceProject="V:\Bertaser\SlimLine-Pushsafer\SlimLine-Pushsafer">
			<resources/>
			<tasks>
				<task name="Back">
					<program>Notify</program>
				</task>
			</tasks>
			<globalVars>
				<group name="Variables">
					<var name="Di00CPU" type="BOOL">
						<address type="I" typeVar="X" index="255" subIndex="0"/>
					</var>
				</group>
			</globalVars>
			<retainVars/>
			<constantVars/>
			<functions/>
			<functionBlocks>
				<functionBlock name="PushSafer" version="1.0.0">
					<vars>
						<inputVars>
							<var name="Enable" type="BOOL">
								<descr>FB enable</descr>
							</var>
							<var name="SpyOn" type="BOOL">
								<descr>Spy active</descr>
							</var>
							<var name="PrivateKey" type="@STRING">
								<descr>Push safer private key</descr>
							</var>
							<var name="Device" type="@STRING">
								<descr>Device selector</descr>
							</var>
							<var name="Title" type="@STRING">
								<descr>Message title</descr>
							</var>
							<var name="Icon" type="USINT">
								<descr>Icon selector</descr>
							</var>
							<var name="Sound" type="USINT">
								<descr>Sound selector</descr>
							</var>
							<var name="Vibration" type="USINT">
								<descr>Vibration selector</descr>
							</var>
							<var name="Message" type="@STRING">
								<descr>Message to send</descr>
							</var>
							<var name="Extras" type="@STRING">
								<descr>Extra parameters</descr>
							</var>
							<var name="HTTPClient" type="@HTTPClient">
								<descr>HTTP client</descr>
							</var>
						</inputVars>
						<outputVars>
							<var name="Done" type="BOOL">
								<descr>Command done</descr>
							</var>
							<var name="Fault" type="BOOL">
								<descr>Execution fault</descr>
							</var>
							<var name="APICalls" type="UDINT">
								<descr>Number of API calls available</descr>
							</var>
							<var name="Status" type="USINT">
								<descr>Command status</descr>
							</var>
							<var name="Result" type="STRING" length="32">
								<descr>Result message</descr>
							</var>
						</outputVars>
						<externalVars>
							<var name="SysActTaskID" type="USINT">
								<descr>Task ID</descr>
							</var>
						</externalVars>
						<localVars>
							<var name="i" type="UDINT">
								<descr>Aux counter</descr>
							</var>
							<var name="TimeBf" type="UDINT">
								<descr>Time buffer (uS)</descr>
							</var>
							<var name="ErrorNr" type="UDINT">
								<descr>Error number</descr>
							</var>
							<var name="DBuffer" type="@STRING">
								<descr>Data buffer address</descr>
							</var>
							<var name="DBLength" type="UDINT">
								<descr>Data buffer length</descr>
							</var>
							<var name="CaseNr" type="USINT">
								<descr>Case gestione</descr>
							</var>
						</localVars>
					</vars>
					<interfaces/>
					<methods/>
					<sourceCode type="ST" encoded="true">
						<![CDATA[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
MXpMkw==]]>
					</sourceCode>
				</functionBlock>
				<functionBlock name="HTTPClient" version="1.0.0">
					<descr>(eLLabNetworkLib_A700) HTTP client</descr>
					<vars>
						<inputVars>
							<var name="Enable" type="BOOL">
								<descr>FB enable</descr>
							</var>
							<var name="Method" type="BOOL">
								<descr>Request method (FALSE:GET, TRUE:POST)</descr>
							</var>
							<var name="SpyOn" type="BOOL">
								<descr>Spy active</descr>
							</var>
							<var name="HostAddress" type="@BYTE">
								<descr>Host URL</descr>
							</var>
							<var name="HostName" type="@BYTE">
								<descr>Host name</descr>
							</var>
							<var name="HostPort" type="UINT">
								<descr>Host port</descr>
							</var>
							<var name="Page" type="@BYTE">
								<descr>Page to request</descr>
							</var>
							<var name="Request" type="@BYTE">
								<descr>Request string</descr>
							</var>
							<var name="DBSize" type="UINT">
								<descr>Data buffer size (SysRMalloc)</descr>
							</var>
							<var name="Timeout" type="UDINT">
								<descr>Execution timeout (mS)</descr>
							</var>
						</inputVars>
						<outputVars>
							<var name="Done" type="BOOL">
								<descr>Execution done</descr>
							</var>
							<var name="Fault" type="BOOL">
								<descr>Execution fault</descr>
							</var>
							<var name="RSent" type="BOOL">
								<descr>Request sent</descr>
							</var>
							<var name="PLoad" type="BOOL">
								<descr>Page loaded</descr>
							</var>
							<var name="HTTPStatus" type="STRING" length="64">
								<descr>HTPP Status received</descr>
							</var>
							<var name="DBAddress" type="@BYTE">
								<descr>Data buffer address (SysRMalloc)</descr>
							</var>
							<var name="DBChars" type="UDINT">
								<descr>Data buffer characters</descr>
							</var>
							<var name="PLength" type="UDINT">
								<descr>Received page length</descr>
							</var>
							<var name="PLTime" type="REAL">
								<descr>Page load time (S)</descr>
							</var>
						</outputVars>
						<externalVars>
							<var name="SysActTaskID" type="USINT">
								<descr>Task ID</descr>
							</var>
						</externalVars>
						<localVars>
							<var name="i" type="UDINT">
								<descr>Auxiliary variable</descr>
							</var>
							<var name="TimeBf" type="UDINT" dim0="2">
								<descr>Time buffer</descr>
							</var>
							<var name="TCPClient" type="SysTCPClient">
								<descr>TCP client</descr>
							</var>
							<var name="SBPtr" type="@BYTE">
								<descr>Spy buffer pointer (SysRMAlloc)</descr>
							</var>
							<var name="Ptr" type="@BYTE">
								<descr>Auxiliary pointer</descr>
							</var>
							<var name="LBf" type="UDINT" dim0="5">
								<descr>Length buffer</descr>
							</var>
							<var name="IDBChars" type="UDINT">
								<descr>Data buffer characters (Internal)</descr>
							</var>
							<var name="Fp" type="FILEP">
								<descr>File pointer</descr>
							</var>
							<var name="ErrorNr" type="UDINT">
								<descr>Error number</descr>
							</var>
							<var name="CaseNr" type="USINT">
								<descr>Case gestione</descr>
							</var>
							<var name="CaseBk" type="USINT">
								<descr>Case back</descr>
							</var>
						</localVars>
						<localConsts>
							<const name="SBSize" type="UINT">
								<descr>Spy buffer size (SysRMAlloc)</descr>
								<initValue>128</initValue>
							</const>
						</localConsts>
					</vars>
					<interfaces/>
					<methods/>
					<sourceCode type="ST" encoded="true">
						<![CDATA[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
wjY=]]>
					</sourceCode>
				</functionBlock>
			</functionBlocks>
			<programs>
				<program name="Notify" version="1.0.0">
					<vars>
						<localVars>
							<var name="HTTPRq" type="HTTPClient">
								<descr>HTTP client</descr>
							</var>
							<var name="Notify" type="PushSafer">
								<descr>Push safer notify</descr>
							</var>
						</localVars>
					</vars>
					<sourceCode type="FBD">
						<FBD>
							<network order="N:1" width="0" height="20" error="false">
								<conn id="C:0" error="false">
									<segment xStart="27" yStart="4" xEnd="27" yEnd="4"/>
									<startPin>V:1</startPin>
									<endPin>FB:Notify.Enable</endPin>
								</conn>
								<conn id="C:1" error="false">
									<segment xStart="27" yStart="5" xEnd="27" yEnd="5"/>
									<startPin>K:2</startPin>
									<endPin>FB:Notify.SpyOn</endPin>
								</conn>
								<conn id="C:2" error="false">
									<segment xStart="27" yStart="9" xEnd="27" yEnd="9"/>
									<startPin>FB:Notify.Icon</startPin>
									<endPin>K:7</endPin>
								</conn>
								<conn id="C:3" error="false">
									<segment xStart="27" yStart="10" xEnd="27" yEnd="10"/>
									<startPin>FB:Notify.Sound</startPin>
									<endPin>K:8</endPin>
								</conn>
								<conn id="C:4" error="false">
									<segment xStart="27" yStart="11" xEnd="27" yEnd="11"/>
									<startPin>FB:Notify.Vibration</startPin>
									<endPin>K:9</endPin>
								</conn>
								<conn id="C:5" error="false">
									<segment xStart="21" yStart="2" xEnd="22" yEnd="2"/>
									<segment xEnd="22" yEnd="6"/>
									<segment xEnd="27" yEnd="6"/>
									<startPin>O:3.1</startPin>
									<endPin>FB:Notify.PrivateKey</endPin>
								</conn>
								<conn id="C:6" error="false">
									<segment xStart="21" yStart="5" xEnd="21" yEnd="7"/>
									<segment xEnd="27" yEnd="7"/>
									<startPin>O:4.1</startPin>
									<endPin>FB:Notify.Device</endPin>
								</conn>
								<conn id="C:7" error="false">
									<segment xStart="21" yStart="8" xEnd="27" yEnd="8"/>
									<startPin>O:5.1</startPin>
									<endPin>FB:Notify.Title</endPin>
								</conn>
								<conn id="C:8" error="false">
									<segment xStart="21" yStart="11" xEnd="21" yEnd="12"/>
									<segment xEnd="27" yEnd="12"/>
									<startPin>O:6.1</startPin>
									<endPin>FB:Notify.Message</endPin>
								</conn>
								<conn id="C:9" error="false">
									<segment xStart="21" yStart="14" xEnd="21" yEnd="13"/>
									<segment xEnd="27" yEnd="13"/>
									<startPin>O:10.1</startPin>
									<endPin>FB:Notify.Extras</endPin>
								</conn>
								<conn id="C:10" error="false">
									<segment xStart="16" yStart="14" xEnd="16" yEnd="14"/>
									<startPin>O:10.0</startPin>
									<endPin>K:11</endPin>
								</conn>
								<conn id="C:11" error="false">
									<segment xStart="21" yStart="17" xEnd="22" yEnd="17"/>
									<segment xEnd="22" yEnd="14"/>
									<segment xEnd="27" yEnd="14"/>
									<startPin>O:12.1</startPin>
									<endPin>FB:Notify.HTTPClient</endPin>
								</conn>
								<conn id="C:12" error="false">
									<segment xStart="16" yStart="2" xEnd="16" yEnd="2"/>
									<startPin>K:13</startPin>
									<endPin>O:3.0</endPin>
								</conn>
								<conn id="C:13" error="false">
									<segment xStart="16" yStart="5" xEnd="16" yEnd="5"/>
									<startPin>K:14</startPin>
									<endPin>O:4.0</endPin>
								</conn>
								<conn id="C:14" error="false">
									<segment xStart="16" yStart="8" xEnd="16" yEnd="8"/>
									<startPin>K:15</startPin>
									<endPin>O:5.0</endPin>
								</conn>
								<conn id="C:15" error="false">
									<segment xStart="16" yStart="11" xEnd="16" yEnd="11"/>
									<startPin>O:6.0</startPin>
									<endPin>K:16</endPin>
								</conn>
								<conn id="C:16" error="false">
									<segment xStart="16" yStart="17" xEnd="16" yEnd="17"/>
									<startPin>O:12.0</startPin>
									<endPin>V:17</endPin>
								</conn>
								<const id="K:2" error="false" name="TRUE" x="27" y="5">
									<pin>C:1</pin>
								</const>
								<const id="K:7" error="false" name="8" x="27" y="9">
									<pin>C:2</pin>
								</const>
								<const id="K:8" error="false" name="14" x="27" y="10">
									<pin>C:3</pin>
								</const>
								<const id="K:9" error="false" name="1" x="27" y="11">
									<pin>C:4</pin>
								</const>
								<const id="K:11" error="false" name="'$26u=&quot;https://www.pushsafer.com&quot;'" x="16" y="14">
									<pin>C:10</pin>
								</const>
								<const id="K:13" error="false" name="'My private key'" x="16" y="2">
									<pin>C:12</pin>
								</const>
								<const id="K:14" error="false" name="'Device ID'" x="16" y="5">
									<pin>C:13</pin>
								</const>
								<const id="K:15" error="false" name="'Notify title'" x="16" y="8">
									<pin>C:14</pin>
								</const>
								<const id="K:16" error="false" name="'Notify message'" x="16" y="11">
									<pin>C:15</pin>
								</const>
								<var id="V:1" error="false" type="Input" name="Di00CPU" x="27" y="4">
									<pin>C:0</pin>
								</var>
								<var id="V:17" error="false" type="Input" name="HTTPRq" x="16" y="17">
									<pin>C:16</pin>
								</var>
								<op id="O:3" error="false" width="5" name="ADR" x="16" y="2">
									<inputPin name="0" negated="false">C:12</inputPin>
									<outputPin name="1" negated="false">C:5</outputPin>
								</op>
								<op id="O:4" error="false" width="5" name="ADR" x="16" y="5">
									<inputPin name="0" negated="false">C:13</inputPin>
									<outputPin name="1" negated="false">C:6</outputPin>
								</op>
								<op id="O:5" error="false" width="5" name="ADR" x="16" y="8">
									<inputPin name="0" negated="false">C:14</inputPin>
									<outputPin name="1" negated="false">C:7</outputPin>
								</op>
								<op id="O:6" error="false" width="5" name="ADR" x="16" y="11">
									<inputPin name="0" negated="false">C:15</inputPin>
									<outputPin name="1" negated="false">C:8</outputPin>
								</op>
								<op id="O:10" error="false" width="5" name="ADR" x="16" y="14">
									<inputPin name="0" negated="false">C:10</inputPin>
									<outputPin name="1" negated="false">C:9</outputPin>
								</op>
								<op id="O:12" error="false" width="5" name="ADR" x="16" y="17">
									<inputPin name="0" negated="false">C:16</inputPin>
									<outputPin name="1" negated="false">C:11</outputPin>
								</op>
								<funBlock id="FB:Notify" error="false" width="9" name="PushSafer" x="27" y="4">
									<inputPin name="Enable" negated="false">C:0</inputPin>
									<inputPin name="SpyOn" negated="false">C:1</inputPin>
									<inputPin name="PrivateKey" negated="false">C:5</inputPin>
									<inputPin name="Device" negated="false">C:6</inputPin>
									<inputPin name="Title" negated="false">C:7</inputPin>
									<inputPin name="Icon" negated="false">C:2</inputPin>
									<inputPin name="Sound" negated="false">C:3</inputPin>
									<inputPin name="Vibration" negated="false">C:4</inputPin>
									<inputPin name="Message" negated="false">C:8</inputPin>
									<inputPin name="Extras" negated="false">C:9</inputPin>
									<inputPin name="HTTPClient" negated="false">C:11</inputPin>
									<outputPin name="Done" negated="false"/>
									<outputPin name="Fault" negated="false"/>
									<outputPin name="APICalls" negated="false"/>
									<outputPin name="Status" negated="false"/>
									<outputPin name="Result" negated="false"/>
								</funBlock>
							</network>
						</FBD>
					</sourceCode>
				</program>
			</programs>
			<macros/>
			<structs/>
			<typedefs/>
			<enums/>
			<subranges/>
			<interfaces/>
		</main>
		<target id="Mps054_XTarget_12_0" name="SlimLine-Pushsafer.tgt" fullXml="false">
			<![CDATA[(* ************************************************************************** *)
(* Project      : SFW168J000                                                  *)
(* Programmer   : Massimo Piovera                                             *)
(* Date         : 02/10/2015                                                  *)
(* ************************************************************************** *)
(* Alias "ELSIST XTarget 12.0"                                                *)
(* -------------------------------------------------------------------------- *)

(* ************************************************************************** *)
(* VARIABLES                                                                  *)
(* ************************************************************************** *)

VAR_GLOBAL

    {G:"System variables"}
    SysVR               AT %MB0.0 : ARRAY[0..767] OF BYTE;      {DE:"System read only variables"}
    SysClock100         AT %MB0.0 : BOOL;                       {DE:"System clock 100 mS"}
    SysClock1000        AT %MB0.1 : BOOL;                       {DE:"System clock 1000 mS"}
    SysBackupEnd        AT %MB0.2 : BOOL;                       {DE:"System backup end"}
    SysRestoreFault     AT %MB0.3 : BOOL;                       {DE:"System restore fault"}
    SysPLCInRun         AT %MB0.4 : BOOL;                       {DE:"System PLC is running"}
    SysFirstLoop        AT %MB0.5 : BOOL;                       {DE:"System first execution loop"}
    SysLLabCn           AT %MB0.6 : BOOL;                       {DE:"LogicLab connected to the system"}
    SysIsDST            AT %MB0.7 : BOOL;                       {DE:"Is daylight saving time"}
    SysDTSet            AT %MB0.8 : BOOL;                       {DE:"Date/Time set"}
    SysUVSet            AT %MB0.9 : BOOL;                       {DE:"User variables set"}
    SysAlwaysOff        AT %MB0.10 : BOOL;                      {DE:"Always off"}
    SysAlwaysOn         AT %MB0.11 : BOOL;                      {DE:"Always on"}
    SysFFBUspt          AT %MB0.12 : BOOL;                      {DE:"Function or FB unsupported"}
    SysFFBPrt           AT %MB0.13 : BOOL;                      {DE:"Function or FB protected"}
    SysCfgChanged       AT %MB0.14 : BOOL;                      {DE:"System configuration changed"}

    SysActTaskID        AT %MB0.64 : USINT;                     {DE:"System active task ID"}
    SysErActTaskID      AT %MB0.65 : USINT;                     {DE:"System task ID in error"}

    SysModulesReady     AT %MB0.128 : WORD;                     {DE:"Modules connected to Sline bus (bit index)"}
    SysApllVMajor       AT %MB0.130 : UINT;                     {DE:"Application major version number"}
    SysApllVMinor       AT %MB0.132 : UINT;                     {DE:"Application minor version number"}

    SysTBackLpTm        AT %MB0.256 : UDINT;                    {DE:"System Back task loop time (uS)"}
    SysTBackLpTmMin     AT %MB0.260 : UDINT;                    {DE:"System Back task loop time min (uS)"}
    SysTBackLpTmMax     AT %MB0.264 : UDINT;                    {DE:"System Back task loop time max (uS)"}

    SysTBootExTm        AT %MB0.268 : UDINT;                    {DE:"System Boot task execution time (uS)"}
    SysTBootExTmMin     AT %MB0.272 : UDINT;                    {DE:"System Boot task execution time min (uS)"}
    SysTBootExTmMax     AT %MB0.276 : UDINT;                    {DE:"System Boot task execution time max (uS)"}

    SysTFastExTm        AT %MB0.280 : UDINT;                    {DE:"System Fast task execution time (uS)"}
    SysTFastExTmMin     AT %MB0.284 : UDINT;                    {DE:"System Fast task execution time min (uS)"}
    SysTFastExTmMax     AT %MB0.288 : UDINT;                    {DE:"System Fast task execution time max (uS)"}

    SysTSlowExTm        AT %MB0.292 : UDINT;                    {DE:"System Slow task execution time (uS)"}
    SysTSlowExTmMin     AT %MB0.296 : UDINT;                    {DE:"System Slow task execution time min (uS)"}
    SysTSlowExTmMax     AT %MB0.300 : UDINT;                    {DE:"System Slow task execution time max (uS)"}

    SysTBackExTm        AT %MB0.304 : UDINT;                    {DE:"System Back task execution time (uS)"}
    SysTBackExTmMin     AT %MB0.308 : UDINT;                    {DE:"System Back task execution time min (uS)"}
    SysTBackExTmMax     AT %MB0.312 : UDINT;                    {DE:"System Back task execution time max (uS)"}

    SysStartTime        AT %MB0.316 : UDINT;                    {DE:"PLC run since Date/Time [Epoch time]"}
    SysTime             AT %MB0.320 : UDINT;                    {DE:"System time [mS]"}
    SysTFastLpTm        AT %MB0.324 : UDINT;                    {DE:"System Fast task loop time (uS)"}
    SysTSlowLpTm        AT %MB0.328 : UDINT;                    {DE:"System Slow task loop time (uS)"}

    SysApplID           AT %MB0.332 : UDINT;                    {DE:"Application ID"}
    SysMfcCode          AT %MB0.336 : UDINT;                    {DE:"Manufacturer code"}
    SysCustomerCode     AT %MB0.340 : UDINT;                    {DE:"Customer code"}
    SysErCode           AT %MB0.344 : UDINT;                    {DE:"System error code"}
    SysErTime           AT %MB0.348 : UDINT;                    {DE:"System error time"}
    SysSerialNr         AT %MB0.352 : UDINT;                    {DE:"Device serial number"}
    SysApllBTime        AT %MB0.356 : UDINT;                    {DE:"Build time (Epoch)"}
    SysUniqueID         AT %MB0.360 : UDINT;                    {DE:"Unique ID"}
    
    SysPLCUpTime        AT %MB0.364 : UDINT;                    {DE:"PLC up time (S)"}

    SysCode             AT %MB0.512 : STRING[10];               {DE:"Device product code"}
    SysFVersion         AT %MB0.523 : STRING[10];               {DE:"Firmware version"}
    SysErInfos          AT %MB0.534 : STRING[32];               {DE:"System error infos"}
    SysApllName         AT %MB0.567 : STRING[10];               {DE:"Application name"}
    SysUSetA            AT %MB0.578 : STRING[16];               {DE:"User setting (A)"}
    SysUSetB            AT %MB0.595 : STRING[16];               {DE:"User setting (B)"}
    SysUSetC            AT %MB0.612 : STRING[16];               {DE:"User setting (C)"}
    SysUSetD            AT %MB0.629 : STRING[16];               {DE:"User setting (D)"}

    {G:"System variables"}

    SysVRW              AT %MB1.0 : ARRAY[0..639] OF BYTE;      {DE:"System read and write variables"}
    SysTimeInit         AT %MB1.0 : BOOL;                       {DE:"System timing calculation init"}

    SysDateTime         AT %MB1.256 : UDINT;                    {DE:"System current local date time [Epoch time]"}
    SysLastError        AT %MB1.260 : UDINT;                    {DE:"Last error value"}
    SysUTCDateTime      AT %MB1.264 : UDINT;                    {DE:"System current UTC date time [Epoch time]"}

    SysUInfoA           AT %MB1.512 : STRING[16];               {DE:"User info (A)"}
    SysUInfoB           AT %MB1.529 : STRING[16];               {DE:"User info (B)"}
    SysUInfoC           AT %MB1.546 : STRING[16];               {DE:"User info (C)"}
    SysUInfoD           AT %MB1.563 : STRING[16];               {DE:"User info (D)"}

    {G:"User data"}
    SysData             AT %MB100.0 : ARRAY[0..4095] OF BYTE;   {IO:"User data and backup"}
    SysDataBk           AT %MB100.2048 : ARRAY[0..2047] OF BYTE;{IO:"User data backup"}

    {G:"Digital inputs"}
    SysDI00             AT %IX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 00"}
    SysDI01             AT %IX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 01"}
    SysDI02             AT %IX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 02"}
    SysDI03             AT %IX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 03"}
    SysDI04             AT %IX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 04"}
    SysDI05             AT %IX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 05"}
    SysDI06             AT %IX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 06"}
    SysDI07             AT %IX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 07"}
    SysDI08             AT %IX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 08"}
    SysDI09             AT %IX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 09"}
    SysDI10             AT %IX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 10"}
    SysDI11             AT %IX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 11"}
    SysDI12             AT %IX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 12"}
    SysDI13             AT %IX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 13"}
    SysDI14             AT %IX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 14"}
    SysDI15             AT %IX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 15"}

    SysCPUDI            AT %IX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic inputs CPU"}

    {G:"Digital outputs"}
    SysDO00             AT %QX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 00"}
    SysDO01             AT %QX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 01"}
    SysDO02             AT %QX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 02"}
    SysDO03             AT %QX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 03"}
    SysDO04             AT %QX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 04"}
    SysDO05             AT %QX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 05"}
    SysDO06             AT %QX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 06"}
    SysDO07             AT %QX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 07"}
    SysDO08             AT %QX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 08"}
    SysDO09             AT %QX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 09"}
    SysDO10             AT %QX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 10"}
    SysDO11             AT %QX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 11"}
    SysDO12             AT %QX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 12"}
    SysDO13             AT %QX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 13"}
    SysDO14             AT %QX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 14"}
    SysDO15             AT %QX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 15"}

    SysCPUDO            AT %QX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic outputs CPU"}
END_VAR

(* ########################################################################## *)
(* SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Task ID definition                                                         *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Task ID definition"}

    ID_TASK_BOOT : USINT := 0;  {DE:"Boot task ID"}
    ID_TASK_BACK : USINT := 1;  {DE:"Back task ID"}
    ID_TASK_SLOW : USINT := 2;  {DE:"Slow task ID"}
    ID_TASK_FAST : USINT := 3;  {DE:"Fast task ID"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMAlloc" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMAlloc : @USINT

    {DE:"Allocate a memory buffer"}

    VAR_INPUT
        Size : UDINT;           {DE:"Memory size"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMAlloc" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMAlloc : BOOL

    {DE:"Allocate a relocatable memory buffer"}

    VAR_INPUT
        Size    : UDINT;           {DE:"Memory size"}
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMFree" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMFree : BOOL

    {DE:"Disallocate a relocatable memory buffer"}

    VAR_INPUT
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRandom" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRandom : REAL

    {DE:"Get random number"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSysTime" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSysTime : UDINT

    {DE:"Get uSec system time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetTaskLpTime" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetTaskLpTime : BOOL

    {DE:"Set the task loop time"}

    VAR_INPUT
        TaskID : USINT;         {DE:"Task ID"}
        Time   : UDINT;         {DE:"Task time [uSec]"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetLastError : BOOL

    { HIDDEN:ON }
    {DE:"Set the last error"}

    VAR_INPUT
        Error    : UDINT;       {DE:"Error number"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetLastError : UDINT

    {DE:"Get the last error"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetEndianness" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetEndianness : BOOL

    {DE:"Get the endianness"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* TERMIO DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* TermIO definition                                                          *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"TermIO definition"}

    NULL : FILEP := 0;  {DE:"NULL pointer"}
    EOF : INT := -1;    {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* FILEP definition                                                           *)
(* -------------------------------------------------------------------------- *)

TYPE FILEP : UDINT; END_TYPE

(* -------------------------------------------------------------------------- *)
(* "Sysfopen" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfopen : FILEP

    {DE:"Open a file"}

    VAR_INPUT
        FName : STRING[20];     {DE:"File name"}
        Mode  : STRING[4];      {DE:"Attribute"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfclose" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfclose : INT

    {DE:"Close a file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIsOpen" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIsOpen : BOOL

    {DE:"Get the file open status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfgetc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfgetc : INT

    {DE:"Get character from file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfputc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfputc : INT

    {DE:"Put character to file"}

    VAR_INPUT
        Ch   : INT;             {DE:"Character"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfread" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfread : INT

    {DE:"Read data from file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer filled with read data"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfwrite" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfwrite : INT

    {DE:"Write data to file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer of data to write"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIChars" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetIChars" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOSpace" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetOSpace" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIBfClear : BOOL

    {DE:"Clear input buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfClear : BOOL

    {DE:"Clear output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfFlush" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfFlush : BOOL

    {DE:"Flush output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIBfSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRxBSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOBfSize : UDINT

    {DE:"Get output buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetTxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetTxBSize : UDINT

    {DE:"Get Tx buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* FILE SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                           *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* File system definition                                                     *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"FSeek origin definition"}

    ID_SEEK_SET: USINT := 0;  {DE:"Beginning of file"}
    ID_SEEK_CUR: USINT := 1;  {DE:"Current position of the file pointer"}
    ID_SEEK_END: USINT := 2;  {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "Sysrename" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysrename : BOOL

    {DE:"Rename a file"}

    VAR_INPUT
        OldName : STRING[32];   {DE:"File to rename"}
        NewName : STRING[32];   {DE:"New name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysremove" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysremove : BOOL

    {DE:"Remove a file"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File to rename"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfilelength" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfilelength : DINT

    {DE:"Returns the file length"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfseek" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfseek : DINT

    {DE:"Set the file pointer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Offset : DINT;          {DE:"Offset"}
        Origin : INT;           {DE:"Origin"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysDirListing" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDirListing

    {DE:"Directory listing"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Init    : BOOL;         {DE:"Init command"}
        Next    : BOOL;         {DE:"Next command"}
        PathName: STRING[32];   {DE:"Directory name"}
    END_VAR

    VAR_OUTPUT
        Found   : BOOL;         {DE:"File found"}
        Fault   : BOOL;         {DE:"Fault"}
        IsDir   : BOOL;         {DE:"Is directory"}
        Size    : UDINT;        {DE:"File size"}
        Time    : UDINT;        {DE:"File time (UTC)"}
        FileName: STRING[16];   {DE:"File name"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SERIAL DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* SYSSERIALMODE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSSERIALMODE : STRUCT      {DE:"Serial mode"}
        Baudrate : UDINT;       {DE:"Baudrate"}
        Parity : STRING[1];     {DE:"Parity type"}
        DataBits : USINT;       {DE:"Nr of data bits"}
        StopBits : USINT;       {DE:"Nr of stop bits"}
        DTRManagement : USINT;  {DE:"DTR management type"}
        DTRComplement : BOOL;   {DE:"Complement the DTR signal"}
        EchoFlush : BOOL;       {DE:"Flush the echo"}
        DTROnTime : UINT;       {DE:"DTR On wait time"}
        DTROffTime : UINT;      {DE:"DTR Off wait time"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* Serial DTR mode definition                                                 *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Serial mode definition"}

    DTR_OFF : USINT := 0;   {DE:"DTR off"}
    DTR_ON : USINT := 1;    {DE:"DTR on"}
    DTR_AUTO_WO_TIMES : USINT := 2; {DE:"DTR Auto without times"}
    DTR_AUTO_W_TIMES : USINT := 3;  {DE:"DTR Auto with times"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialMode : BOOL

    {DE:"Get serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialMode : BOOL

    {DE:"Set serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialCTS" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialCTS : BOOL

    {DE:"Get serial CTS signal status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialDTR" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialDTR : BOOL

    {DE:"Set serial DTR signal status"}

    VAR_INPUT
        Status : BOOL;          {DE:"DTR status"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSerialPort" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSerialPort

    {DE:"Serial port manager"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Open    : BOOL;         {DE:"Open serial port"}
        COM     : @USINT;       {DE:"COM port"}
        Baudrate: UDINT;        {DE:"Baudrate"}
        Parity  : STRING[1];    {DE:"Parity type"}
        DataBits: USINT;        {DE:"Number of data bits"}
        StopBits: USINT;        {DE:"Number of stop bits"}
        DTRManagement: USINT;   {DE:"DTR management type"}
        DTRComplement: BOOL;    {DE:"DTR signal complement"}
        EchoFlush   : BOOL;     {DE:"Flush the echo characters"}
        DTROnTime   : UINT;     {DE:"DTR on time"}
        DTROffTime  : UINT;     {DE:"DTR off time"}
        FlushTm : UINT;         {DE:"Flush time [mS]"}
        RxSize  : UINT;         {DE:"Rx buffer data size"}
        TxSize  : UINT;         {DE:"Tx buffer data size"}
    END_VAR

    VAR_OUTPUT
        Opened  : BOOL;         {DE:"Serial port was opened"}
        Fault   : BOOL;         {DE:"Fault status"}
        File    : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SCANF AND PRINTF DATA TYPES DEFINITIONS AND FUNCTIONS                      *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Variable types definition"}

    BOOL_TYPE : USINT := 10;    {DE:"Boolean (1 bits)"}

    BYTE_TYPE : USINT := 20;    {DE:"Byte (8 bits)"}
    SINT_TYPE : USINT := 21;    {DE:"Single integer signed (8 bits)"}
    USINT_TYPE : USINT := 22;   {DE:"Single integer unsigned (8 bits)"}

    WORD_TYPE : USINT := 30;    {DE:"Word (16 bits)"}
    INT_TYPE : USINT := 31;     {DE:"Integer signed (16 bits)"}
    UINT_TYPE : USINT := 32;    {DE:"Integer unsigned (16 bits)"}

    DWORD_TYPE : USINT := 40;   {DE:"Double word (32 bits)"}
    DINT_TYPE : USINT := 41;    {DE:"Double integer signed (32 bits)"}
    UDINT_TYPE : USINT := 42;   {DE:"Double integer unsigned (32 bits)"}
    REAL_TYPE : USINT := 43;    {DE:"Floating (32 bits)"}

    STRING_TYPE : USINT := 50;  {DE:"String"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysVarsscanf" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsscanf : BOOL

    {DE:"Extracts values from string"}

    VAR_INPUT
        String : @USINT;        {DE:"String to scan"}
        Format : STRING[80];    {DE:"Scan format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarfprintf" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarfprintf : INT

    {DE:"Variable print to file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarsnprintf" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsnprintf : INT

    {DE:"Variable print to string"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysLWVarsnprintf" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysLWVarsnprintf : INT

    {DE:"Variable print to string with append"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* CODE FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                         *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysPCodeAccept" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPCodeAccept : BOOL

    {DE:"Accept a protection code"}

    VAR_INPUT
        Code : STRING[20];      {DE:"Code"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIDEnabled" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIDEnabled : REAL

    { HIDDEN:ON }
    {DE:"Protected ID enabled"}

    VAR_INPUT
        ID : UINT;              {DE:"ID to check"}
        DTime : UDINT;          {DE:"Demo time"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* I2C BUS TYPES DEFINITIONS AND FUNCTIONS                                    *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysI2CWrRd" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysI2CWrRd : BOOL

    {DE:"Write and read on I2C bus"}

    VAR_INPUT
        Address : USINT;        {DE:"I2c address"}
        WrBytes : USINT;        {DE:"Bytes to write"}
        WrBuffer: @USINT;       {DE:"Write data buffer"}
        RdBytes : USINT;        {DE:"Bytes to read"}
        RdBuffer: @USINT;       {DE:"Read data buffer"}
     END_VAR

    { CODE:EMBEDDED }

END_FUNCTION

(* ########################################################################## *)
(* CAN DATA TYPES DEFINITIONS AND FUNCTIONS                                   *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* CAN bit rate definition                                                    *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"CAN bit rate definition"}

    CAN_50KBIT : USINT := 0;    {DE:"Bit rate 50 Khz"}
    CAN_100KBIT : USINT := 1;   {DE:"Bit rate 100 Khz"}
    CAN_125KBIT : USINT := 2;   {DE:"Bit rate 125 Khz"}
    CAN_250KBIT : USINT := 3;   {DE:"Bit rate 250 Khz"}
    CAN_500KBIT : USINT := 4;   {DE:"Bit rate 500 Khz"}
    CAN_1MBIT : USINT := 5;     {DE:"Bit rate 1 Mhz"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* SYSCANMESSAGE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSCANMESSAGE : STRUCT      {DE:"CAN message"}
        RmReq : BOOL;           {DE:"FALSE:Data frame, TRUE:Remote request"}
        Length : USINT;         {DE:"Data length"}
        MsgID : UDINT;          {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Data : ARRAY[0..7] OF USINT;    {DE:"Message data"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* "SysCANSetMode" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANSetMode : BOOL

    {DE:"Sets the CAN controller mode"}

    VAR_INPUT
        BitRate : USINT;        {DE:"Bit rate"}
        Filter : UDINT;         {DE:"Acceptance filter"}
        Mask : UDINT;           {DE:"Acceptance mask"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIsCANRxTxAv" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIsCANRxTxAv : BOOL

    {DE:"Check if CAN Rx/Tx is available"}

    VAR_INPUT
        Select : BOOL;         {DE:"eFALSE:Rx message selection, eTRUE:Tx space selection"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANRxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANRxMsg : BOOL

    {DE:"Receive a CAN message"}

    VAR_INPUT
        Mask : UDINT;           {DE:"Message ID mask"}
        ID : UDINT;             {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANTxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANTxMsg : BOOL

    {DE:"Send a CAN message"}

    VAR_INPUT
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* IEC EMBEDDED SUPPORT FUNCTION BLOCKS                                       *)
(* ########################################################################## *)

(* ************************************************************************** *)
(* DATE AND TIME FUNCTION BLOCKS                                              *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysETimeToDate" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysETimeToDate

    {DE:"Epoch time to date conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        WeekDay: USINT;         {DE:"WeekDay"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDateToETime" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDateToETime

    {DE:"Date to epoch time conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetUTCDateTime : UDINT

    {DE:"Get the system UTC date time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetUTCDateTime : BOOL

    {DE:"Set the system UTC date time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysTimeZoneAdj" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysTimeZoneAdj : UDINT

    {DE:"Adjust the UTC date time with time zone and daylight saving time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to adjust"}
        TimeZone    : SINT;              {DE:"Difference to Greenwich time (GMT) (H)"}
        DaylightZone: USINT;             {DE:"Daylight saving zone (0=None; 1=Europe; 2=USA"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* UTILITIES                                                                  *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "Sysmemset" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemset : @USINT

    {DE:"Fill a memory area with a character value"}

    VAR_INPUT
        Buff    : @USINT;       {DE:"Memory area"}
        Ch      : INT;          {DE:"Character to set"}
        Size    : UDINT;        {DE:"Number of bytes to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysmemmove" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemmove : @USINT

    {DE:"Copy bytes between two memory areas"}

    VAR_INPUT
        Dest    : @USINT;       {DE:"Destination area"}
        Src     : @USINT;       {DE:"Source area"}
        Size    : UDINT;        {DE:"Number of bytes to copy"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"Find mode"}

    FIND_DEFAULT        : USINT := 16#00;  {DE:"Default find"}
    FIND_FROM_END       : USINT := 16#01;  {DE:"Find from end"}
    FIND_NO_CASE        : USINT := 16#02;  {DE:"Find case insentive"}
    FIND_GET_END        : USINT := 16#04;  {DE:"Return a pointer to end of found"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMemFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMemFind : @USINT

    {DE:"Locate a memory area inside another"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"Memory area where to find"}
        HSize   : UDINT;        {DE:"Haystack area size"}
        Needle  : @USINT;       {DE:"Memory area to find"}
        NSize   : UDINT;        {DE:"Needle area size"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systolower" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systolower : INT

    {DE:"Convert a character to lower case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systoupper" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systoupper : INT

    {DE:"Convert a character to upper case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysstrlen" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysstrlen : UDINT

    {DE:"Calculate length of string"}

    VAR_INPUT
        Str     : @USINT;       {DE:"String"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysStrFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysStrFind : @USINT

    {DE:"Locate a substring inside a string"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"String where to find"}
        Needle  : @USINT;       {DE:"String to find"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"OS variable ID"}

    OSID_CFG_WRITE          : UDINT := 1;   {DE:"Save configuration"}
    
    OSID_ETH0_IP            : UDINT := 100; {DE:"Eth0 IP address"}
    OSID_ETH0_MASK          : UDINT := 101; {DE:"Eth0 network mask"}
    OSID_ETH0_GATEWAY       : UDINT := 102; {DE:"Eth0 gateway"}
    OSID_ETH0_MAC           : UDINT := 103; {DE:"Eth0 MAC address"}
    OSID_ETH0_DNS_PRIM      : UDINT := 104; {DE:"Eth0 primary DNS"}
    OSID_ETH0_DNS_SEC       : UDINT := 105; {DE:"Eth0 secondary DNS"}
    
    OSID_ETH1_IP            : UDINT := 200; {DE:"Eth1 IP address"}
    OSID_ETH1_MASK          : UDINT := 201; {DE:"Eth1 network mask"}
    OSID_ETH1_GATEWAY       : UDINT := 202; {DE:"Eth1 gateway"}
    OSID_ETH1_MAC           : UDINT := 203; {DE:"Eth1 MAC address"}
    OSID_ETH1_LEASED_MAC    : UDINT := 204; {DE:"Eth1 leased MAC address"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysOSIDValue" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysOSIDValue : BOOL

    {DE:"Get or set an operative system variable"}

    VAR_INPUT
        Wr      : BOOL;         {DE:"Write command"}
        OSID    : UDINT;        {DE:"Variable ID"}
        Val     : @USINT;       {DE:"Variable pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetCrc" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCrc

    {DE:"Crc calculation"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Buf   : @USINT;         {DE:"Buffer filled with read data"}
        ByteNr: UINT;           {DE:"Number of byte to calculate"}
        CrcIni: UINT;           {DE:"Crc init value"}
    END_VAR

    VAR_OUTPUT
        Crc : UINT;             {DE:"Calculated Crc"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ************************************************************************** *)
(* CHECK CALCULATION                                                          *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* Check mode definition                                                      *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Check type definitions"}

    CRC_16_MODBUS   : USINT := 1;   {DE:"Modbus RTU CRC"}
    LRC_ISO1155     : USINT := 2;   {DE:"ISO1155 LRC"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetCheck" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetCheck : UDINT

    {DE:"Check calculation"}

    VAR_INPUT
        Buf     : @USINT;       {DE:"Buffer filled with data"}
        ByteNr  : UDINT;        {DE:"Number of bytes to calculate"}
        Init    : UDINT;        {DE:"Init value"}
        Type    : USINT;        {DE:"Check type"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* PERIPHERAL MANAGEMENT FUNCTION BLOCKS                                      *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysPhrInfos" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrInfos : BOOL

    {DE:"Read peripheral module infos"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        InfoID: USINT;          {DE:"Info ID"}
        Info : STRING[10];      {DE:"Info report"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVRd" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVRd : BOOL

    {DE:"Read variable from peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        RdAdd: UINT;            {DE:"Read address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVWr" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVWr : BOOL

    {DE:"Write variable to peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        WrAdd: UINT;            {DE:"Write address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetPhrDI" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital input mode"}

    DI_8_LL : USINT := 1;       {DE:"Read 0-7 input mode"}
    DI_8_L  : USINT := 2;       {DE:"Read 8-15 input mode"}
    DI_8_M  : USINT := 3;       {DE:"Read 16-23 input mode"}
    DI_8_MM : USINT := 4;       {DE:"Read 24-31 input mode"}

    DI_16_L : USINT := 5;       {DE:"Read 0-15 input mode"}
    DI_16_M : USINT := 6;       {DE:"Read 16-31 input mode"}

    DI_32   : USINT := 7;       {DE:"Read 32 input mode"}
    
    DI_I_8_LL : USINT := 11;    {DE:"Read 0-7 immediate input mode"}
    DI_I_8_L  : USINT := 12;    {DE:"Read 8-15 immediate input mode"}
    DI_I_8_M  : USINT := 13;    {DE:"Read 16-23 immediate input mode"}
    DI_I_8_MM : USINT := 14;    {DE:"Read 24-31 immediate input mode"}

    DI_I_16_L : USINT := 15;    {DE:"Read 0-15 immediate input mode"}
    DI_I_16_M : USINT := 16;    {DE:"Read 16-31 immediate input mode"}

    DI_I_32   : USINT := 17;    {DE:"Read 32 immediate input mode"}

END_VAR

FUNCTION_BLOCK SysGetPhrDI

    {DE:"Get the peripheral digital inputs"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : DWORD;        {DE:"Digital input value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPhrDO" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital output mode"}

    DO_8_LL : USINT := 1;       {DE:"Write 0-7 output mode"}
    DO_8_L  : USINT := 2;       {DE:"Write 8-15 output mode"}
    DO_8_M  : USINT := 3;       {DE:"Write 16-23 output mode"}
    DO_8_MM : USINT := 4;       {DE:"Write 24-31 output mode"}

    DO_16_L : USINT := 5;       {DE:"Write 0-15 output mode"}
    DO_16_M : USINT := 6;       {DE:"Write 16-31 output mode"}

    DO_32   : USINT := 7;       {DE:"Write 32 output mode"}
END_VAR

FUNCTION_BLOCK SysSetPhrDO

    {DE:"Set the peripheral digital outputs"}

    VAR
        Ver     : USINT := 1;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : DWORD;        {DE:"Digital output value"}
        Mask    : DWORD;        {DE:"Memory mapped output mask"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetAnInp" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Analog to digital mode"}

    AD_IDLE              : USINT := 16#00;  {DE:"Idle mode"}
    AD_VOLT_0_125_COMMON : USINT := 16#01;  {DE:"0-1.25V common mode"}
    AD_VOLT_0_10_COMMON  : USINT := 16#02;  {DE:"0-10V common mode"}
    AD_CURR_0_20_COMMON  : USINT := 16#03;  {DE:"0-20mA common mode"}
    AD_CURR_4_20_COMMON  : USINT := 16#04;  {DE:"4-20mA common mode"}
    AD_VOLT_0_1_COMMON   : USINT := 16#05;  {DE:"0-1V common mode"}
    AD_CURR_0_20_DIFFER  : USINT := 16#06;  {DE:"0-20mA differential mode"}
    AD_VOLT_0_1_DIFFER   : USINT := 16#07;  {DE:"0-1V differential mode"}
    AD_VOLT_0_125_DIFFER : USINT := 16#08;  {DE:"0-1.25V differential mode"}
    AD_VOLT_0_10_DIFFER  : USINT := 16#09;  {DE:"0-10V differential mode"}
    AD_PT100_DIFFER      : USINT := 16#0A;  {DE:"Pt100 differential mode"}
    AD_PT1000_DIFFER     : USINT := 16#0B;  {DE:"Pt1000 differential mode"}
    AD_NI1000_DIFFER     : USINT := 16#0C;  {DE:"Ni1000 differential mode"}
    AD_CURR_4_20_DIFFER  : USINT := 16#0D;  {DE:"4-20mA differential mode"}
    AD_PT100_DIN_43760   : USINT := 16#20;  {DE:"Pt100 DIN_43760 standard"}
    AD_PT100_AMERICAN    : USINT := 16#21;  {DE:"Pt100 American standard"}
    AD_PT100_ITS_90      : USINT := 16#22;  {DE:"Pt100 ITS-90 standard"}
    AD_PT100_IEC_60751   : USINT := 16#23;  {DE:"Pt100 IEC-60751 standard"}
    AD_PT1000_DIN_43760  : USINT := 16#28;  {DE:"Pt1000 DIN_43760 standard"}
    AD_PT1000_AMERICAN   : USINT := 16#29;  {DE:"Pt1000 American standard"}
    AD_PT1000_ITS_90     : USINT := 16#2A;  {DE:"Pt1000 ITS-90 standard"}
    AD_PT1000_IEC_60751  : USINT := 16#2B;  {DE:"Pt1000 IEC-60751 standard"}
    AD_NI1000_DIN_43760  : USINT := 16#30;  {DE:"Ni1000 DIN_43760 standard"}
    AD_THERMOCOUPLE_B    : USINT := 16#40;  {DE:"Thermocouple B type"}
    AD_THERMOCOUPLE_E    : USINT := 16#41;  {DE:"Thermocouple E type"}
    AD_THERMOCOUPLE_J    : USINT := 16#42;  {DE:"Thermocouple J type"}
    AD_THERMOCOUPLE_K    : USINT := 16#43;  {DE:"Thermocouple K type"}
    AD_THERMOCOUPLE_N    : USINT := 16#44;  {DE:"Thermocouple N type"}
    AD_THERMOCOUPLE_R    : USINT := 16#45;  {DE:"Thermocouple R type"}
    AD_THERMOCOUPLE_S    : USINT := 16#46;  {DE:"Thermocouple S type"}
    AD_THERMOCOUPLE_T    : USINT := 16#47;  {DE:"Thermocouple T type"}
    AD_VIN_VREF_G_1      : USINT := 16#5A;  {DE:"Vin/Vref gain=1"}
    AD_VIN_VREF_G_2      : USINT := 16#5B;  {DE:"Vin/Vref gain=2"}
    AD_VIN_VREF_G_4      : USINT := 16#5C;  {DE:"Vin/Vref gain=4"}
    AD_VIN_VREF_G_8      : USINT := 16#5D;  {DE:"Vin/Vref gain=8"}
    AD_VIN_VREF_G_16     : USINT := 16#5E;  {DE:"Vin/Vref gain=16"}
    AD_VIN_VREF_G_32     : USINT := 16#5F;  {DE:"Vin/Vref gain=32"}
    AD_VIN_VREF_G_64     : USINT := 16#60;  {DE:"Vin/Vref gain=64"}
    AD_VIN_VREF_G_128    : USINT := 16#61;  {DE:"Vin/Vref gain=128"}
    AD_RESISTOR_300_OHM  : USINT := 16#6E;  {DE:"Resistor 0-300 ohm"}
    AD_RESISTOR_5000_OHM : USINT := 16#6F;  {DE:"Resistor 0-5000 ohm"}
    
END_VAR

FUNCTION_BLOCK SysGetAnInp

    {DE:"Get analog input"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : REAL;         {DE:"Value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetAnOut" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital to analog mode"}

    DA_VOLT_0_10         : USINT := 16#01;  {DE:"0-10V"}
    DA_VOLT_0_5          : USINT := 16#02;  {DE:"0-5V"}
    DA_VOLT_M10_10       : USINT := 16#03;  {DE:"+-10V"}
    DA_VOLT_M5_5         : USINT := 16#04;  {DE:"+-5V"}
    DA_CURR_0_20         : USINT := 16#05;  {DE:"0-20mA"}
    DA_CURR_4_20         : USINT := 16#06;  {DE:"4-20mA"}

END_VAR

FUNCTION_BLOCK SysSetAnOut

    {DE:"Set analog output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : REAL;         {DE:"Value"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetCounter" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCounter

    {DE:"Get counter value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode : UDINT;           {DE:"Mode"}
        RCount  : BOOL;         {DE:"Reverse count"}
        Reset  : BOOL;          {DE:"Count reset"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value  : UDINT;         {DE:"Counter value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetEncoder" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetEncoder

    {DE:"Get encoder value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        RCount  : BOOL;         {DE:"Reverse count"}
        ZeroEn  : BOOL;         {DE:"Zero enable"}
        GateEn  : BOOL;         {DE:"Gate enable"}
        RGate   : BOOL;         {DE:"Reverse gate"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ZeroD   : BOOL;         {DE:"Zero pulse detected"}
        GateD   : BOOL;         {DE:"Gate detected"}
        GQuote  : UINT;         {DE:"Gate quote"}
        EQuote  : UINT;         {DE:"Encoder quote"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDMXMng" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDMXMng

    {DE:"DMX protocol management"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Start  : BOOL;          {DE:"Start"}
        File : FILEP;           {DE:"File"}
        Status : USINT;         {DE:"Status byte"}
        Devices : UINT;         {DE:"Number of devices"}
        Delay : UINT;           {DE:"Interframe delay [mSec]"}
        DataPtr : @USINT;       {DE:"Data array pointer"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPWMOut" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSetPWMOut

    {DE:"Set PWM generator output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Frequency : REAL;       {DE:"Frequency (Hz)"}
        Duty    : REAL;         {DE:"Duty cycle (%)"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* NETWORK DATA TYPES DEFINITIONS AND FUNCTIONS                               *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktSend" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysUDPSktSend : INT

    {DE:"Send data to UDP socket"}

    VAR_INPUT
        File    : FILEP;        {DE:"File pointer"}
        TxData  : @USINT;       {DE:"Tx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort    : UINT;     {DE:"Peer port"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIPReach" function block                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysIPReach

    {DE:"Checks if IP is reachable"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Refresh : USINT;        {DE:"Refresh percentage (%)"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSktListen" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSktListen

    {DE:"Set socket in listening"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File"}
        MyIP    : STRING[15];   {DE:"My IP address"}
        MyPort  : UINT;         {DE:"My port"}
        LifeTm  : UINT;         {DE:"Life time (S)"}
        FlushTm : UINT;         {DE:"Flush time (mS)"}
        RxSize  : UINT;         {DE:"Rx data size"}
        TxSize  : UINT;         {DE:"Tx data size"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Connect : BOOL;         {DE:"Socket connect"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktRcv" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPSktRcv

    {DE:"Receive data from UDP socket"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File pointer"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort: UINT;         {DE:"Peer port"}
        RxData  : @USINT;       {DE:"Rx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
        RxSize  : UINT;         {DE:"Received bytes"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPClient

    {DE:"UDP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPServer

    {DE:"UDP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPClient

    {DE:"TCP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPServer

    {DE:"TCP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetIpInfos" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetIpInfos

    {DE:"Get IP infos"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        File     : FILEP;        {DE:"Pointer to file"}
     END_VAR

    VAR_OUTPUT
        PeerIP   : STRING[15];   {DE:"Peer IP address"}
        PeerPort : UINT;         {DE:"Peer port"}
        Status   : DWORD;        {DE:"Connection status"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SPY DATA FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                     *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Spy mode definition"}

    SPY_ASCII : USINT := 1;     {DE:"Ascii mode"}
    SPY_ASCHEX: USINT := 10;    {DE:"Ascii with substitute unprintable chars"}
    SPY_BINARY: USINT := 100;   {DE:"Binary mode (From 100 to 180)"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysSpyData" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSpyData : BOOL

    {DE:"Spy data"}

    VAR_INPUT
        Mode    : USINT;        {DE:"Spy mode"}
        TFlags  : UDINT;        {DE:"Trigger flags"}
        Label   : @USINT;       {DE:"Label pointer"}
        DPtr    : @USINT;       {DE:"Data pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

]]>
		</target>
		<targetXML name="SlimLine-Pushsafer.tgtx" fullXml="true">
			<target>
				<resources>
					<resource name="ELS20" processor="ARMv7M">
						<task id="0" name="Fast" type="cyclic" period="1000" descr="Fast task">
							<constraints minPeriod="100" maxPeriod="10000"/>
						</task>
						<task id="1" name="Slow" type="cyclic" period="10000" descr="Slow task">
							<constraints minPeriod="1000" maxPeriod="100000"/>
						</task>
						<task id="2" name="Boot" type="single" period="0" descr="Boot task"/>
						<task id="3" name="Back" period="0" type="cyclic" descr="Background task"/>
					</resource>
				</resources>
			</target>
		</targetXML>
		<libraries/>
		<aux>
			<src name="HMIsManager.PLC" fullXml="false">
				<![CDATA[]]>
			</src>
		</aux>
		<workspace>
			<root name="SlimLine-Pushsafer" nextID="24">
				<folder name="POUs" id="1">
					<Pou name="Notify" id="17"/>
				</folder>
				<GlobalVars name="Variables" id="9">
					<var name="Di00CPU" id="23"/>
				</GlobalVars>
				<folder name="FBs" id="12">
					<Pou name="PushSafer" id="10"/>
					<Pou name="HTTPClient" id="20"/>
				</folder>
			</root>
		</workspace>
	</sources>
	<codegen crossReference="false" crossReferenceOptions="0x3000001D" listing="true" hideSourceCodeInListing="true" saveEXPFile="true" saveTargetFiles="false" warningEnable="true" symMap="true" checkIndexType="false" waitExtension="false" allocateUnusedVariables="false" checkArrayBounds="false" checkDivisionByZero="false" checkPointers="false" checkReferences="false" checkInterfaces="false" customTargetBINFileName="SlimLine-Pushsafer.bin" customTargetTSCFileName="SlimLine-Pushsafer_source.bin" customTargetTDSFileName="SlimLine-Pushsafer_debug.bin" generateCustomFilesName="false">
		<disabledWarnings/>
		<applicationDataBlocks/>
	</codegen>
	<simWorkspaces/>
	<debug watchRefresh="20" watchVarRefresh="0" watchMaxArray="20" autoSaveWatchList="false"/>
	<editor useOldGridSize="false"/>
	<userDef>
		<release>Xtarget</release>
		<author/>
		<note/>
		<version/>
		<password disabled="false"/>
	</userDef>
	<downloadSequence sourceCode="onPLCApplicationDownload" debugSymbols="onPLCApplicationDownload"/>
	<commands>
		<postbuild/>
		<postdown/>
		<predown/>
	</commands>
	<resources>
		<configuration template="LogicLab.pct" version="1">
			<data protocol="root">
				<project_config nextID="0">
					<datacomment/>
				</project_config>
				<Mps054_XTarget_12_0 template="Elsist\Plc\Mps054_XTarget_12_0.pct" version="1" name="SlimLine Mps054 XTarget" caption="SlimLine Mps054 XTarget">
					<config>
						<elsist_hmis/>
					</config>
				</Mps054_XTarget_12_0>
			</data>
		</configuration>
	</resources>
</plcProject>